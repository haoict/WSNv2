/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.wsn;

import static com.wsn.ConstValues.*;
import java.awt.event.ActionEvent;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.*;
import static java.lang.Math.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionListener;
import java.io.File;

/**
 *
 * @author Hao
 */
public class MapFrame extends javax.swing.JFrame {
    
    static final int MAX_SENSORS = 200;
    static final int MOVE_DELAY = 20;
    final Point2D p1 = new Point2D(2, 1);
    //SensorPanel sensorContainer = new SensorPanel();
    private boolean isAddingWall;
    private boolean isAddingSensor;
    private boolean isAddingPoly;
    private boolean isSendingRandomMessgae;

    public boolean isIsSendingRandomMessgae() {
        return isSendingRandomMessgae;
    }

    public void setIsSendingRandomMessgae(boolean isSendingRandomMessgae) {
        this.isSendingRandomMessgae = isSendingRandomMessgae;
    }

    public boolean isIsAddingPoly() {
        return isAddingPoly;
    }

    public void setIsAddingWall(boolean isAddingWall) {
        this.isAddingWall = isAddingWall;
    }

    public void setIsAddingSensor(boolean isAddingSensor) {
        this.isAddingSensor = isAddingSensor;
    }

    public void setIsAddingPoly(boolean isAddingPoly) {
        this.isAddingPoly = isAddingPoly;
    }
    private boolean isDefaultSensor;
    int numOfSensor;
    JFrame parentMainFrame;
    /**
     * Creates new form MapFrame
     */
    public MapFrame(MainFrame parent) {
        super("Map");
        initComponents();
        // set center windows
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
        
        this.parentMainFrame = parent;
        
        addPoly = -1;
        isAddingWall = false;
        isAddingSensor = false;
        isAddingPoly = false;
        isSendingRandomMessgae = false;
        
        //setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        //BoxLayout boxLayout = new BoxLayout(this.getContentPane(), BoxLayout.PAGE_AXIS);
        //getContentPane().setLayout(boxLayout);
        //jPanelMainArea = sensorContainer;
        //getContentPane().add(jPanelMainArea);
        pack();
        new Timer(MOVE_DELAY, (ActionListener) sensorContainer).start();
        
        jRadioGreedy.setSelected(true);
        isDefaultSensor = true;
        this.jLabelScale.setText("Scale: 100");
    }
    
    public static void updateTextArea(final String text) {
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                jTextInformation.append(text);
            }
        });
    }

    public JLabel getjLabelScale() {
        return jLabelScale;
    }
    
    public JLabel getjLabelX () {
        return jLabelX;
    }
    
    public JLabel getjLabelY () {
        return jLabelY;
    }
    
    public JPanel getjPanelStatus() {
        return jPanelStatus;
    }
    
    public boolean isAddingWall() {
        return isAddingWall;
    }
    
    public boolean isAddingSensor() {
        return isAddingSensor;
    }

    public boolean isIsDefaultSensor() {
        return isDefaultSensor;
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jToolBar1 = new javax.swing.JToolBar();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        buttonGroup6 = new javax.swing.ButtonGroup();
        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem2 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem3 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem4 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem5 = new javax.swing.JRadioButtonMenuItem();
        jPanelStatus = new javax.swing.JPanel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(100, 0), new java.awt.Dimension(100, 0), new java.awt.Dimension(100, 32767));
        jLabelX = new javax.swing.JLabel();
        jLabelY = new javax.swing.JLabel();
        jLabelScale = new javax.swing.JLabel();
        jPanelNavigation = new javax.swing.JPanel();
        jButtonAddSensor = new javax.swing.JButton();
        jButtonAddRandomSensor = new javax.swing.JButton();
        jButtonAddPoly = new javax.swing.JButton();
        jButtonSendRandMsg = new javax.swing.JButton();
        jButtonShowStat = new javax.swing.JButton();
        jButtonAddWall = new javax.swing.JButton();
        jButtonGoHome = new javax.swing.JButton();
        jRadioGreedy = new javax.swing.JRadioButton();
        jRadioSmart = new javax.swing.JRadioButton();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        jPanelInformation = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextInformation = new javax.swing.JTextArea();
        sensorContainer = new com.wsn.SensorPanel(this);
        jLabel4 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenuFileNew = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuFileExit = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();

        jMenu1.setText("jMenu1");

        jToolBar1.setRollover(true);

        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("jRadioButtonMenuItem1");

        jRadioButtonMenuItem2.setSelected(true);
        jRadioButtonMenuItem2.setText("jRadioButtonMenuItem2");

        jRadioButtonMenuItem3.setSelected(true);
        jRadioButtonMenuItem3.setText("jRadioButtonMenuItem3");

        jRadioButtonMenuItem4.setSelected(true);
        jRadioButtonMenuItem4.setText("jRadioButtonMenuItem4");

        jRadioButtonMenuItem5.setSelected(true);
        jRadioButtonMenuItem5.setText("jRadioButtonMenuItem5");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 255));

        jPanelStatus.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelX.setText("X:");

        jLabelY.setText("Y:");

        jLabelScale.setText("Scale: ");

        javax.swing.GroupLayout jPanelStatusLayout = new javax.swing.GroupLayout(jPanelStatus);
        jPanelStatus.setLayout(jPanelStatusLayout);
        jPanelStatusLayout.setHorizontalGroup(
            jPanelStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelStatusLayout.createSequentialGroup()
                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelStatusLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelScale, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelX, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelY, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanelStatusLayout.setVerticalGroup(
            jPanelStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabelX, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelY)
                .addComponent(jLabelScale, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanelStatusLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanelNavigation.setBackground(new java.awt.Color(102, 153, 255));
        jPanelNavigation.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButtonAddSensor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/wsn/res/bt_add_sensor.png"))); // NOI18N
        jButtonAddSensor.setText("Add Sensor");
        jButtonAddSensor.setContentAreaFilled(false);
        jButtonAddSensor.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonAddSensor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddSensorActionPerformed(evt);
            }
        });

        jButtonAddRandomSensor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/wsn/res/bt_add_randomsensor.png"))); // NOI18N
        jButtonAddRandomSensor.setText("      Add Random Sensors");
        jButtonAddRandomSensor.setContentAreaFilled(false);
        jButtonAddRandomSensor.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonAddRandomSensor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddRandomSensorActionPerformed(evt);
            }
        });

        jButtonAddPoly.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/wsn/res/bt_add_poly.png"))); // NOI18N
        jButtonAddPoly.setText("Add Poly");
        jButtonAddPoly.setContentAreaFilled(false);
        jButtonAddPoly.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonAddPoly.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddPolyActionPerformed(evt);
            }
        });

        jButtonSendRandMsg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/wsn/res/bt_send_randmsg.png"))); // NOI18N
        jButtonSendRandMsg.setText("     Random Msg");
        jButtonSendRandMsg.setContentAreaFilled(false);
        jButtonSendRandMsg.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonSendRandMsg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSendRandMsgActionPerformed(evt);
            }
        });

        jButtonShowStat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/wsn/res/bt_show_stat.png"))); // NOI18N
        jButtonShowStat.setText("Show Stat");
        jButtonShowStat.setContentAreaFilled(false);
        jButtonShowStat.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonShowStat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonShowStatActionPerformed(evt);
            }
        });

        jButtonAddWall.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/wsn/res/bt_add_wall.png"))); // NOI18N
        jButtonAddWall.setText("Add Wall");
        jButtonAddWall.setContentAreaFilled(false);
        jButtonAddWall.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonAddWall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddWallActionPerformed(evt);
            }
        });

        jButtonGoHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/wsn/res/bt_home.png"))); // NOI18N
        jButtonGoHome.setText("Go Home");
        jButtonGoHome.setContentAreaFilled(false);
        jButtonGoHome.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonGoHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGoHomeActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioGreedy);
        jRadioGreedy.setText("Greedy Sensor");
        jRadioGreedy.setContentAreaFilled(false);
        jRadioGreedy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioGreedyActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioSmart);
        jRadioSmart.setText("Smart Sensor");
        jRadioSmart.setContentAreaFilled(false);
        jRadioSmart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioSmartActionPerformed(evt);
            }
        });

        jLabel1.setText("Other Controls");

        jLabel2.setText("Add Obstacle");

        jLabel3.setText("Add Sensor");

        javax.swing.GroupLayout jPanelNavigationLayout = new javax.swing.GroupLayout(jPanelNavigation);
        jPanelNavigation.setLayout(jPanelNavigationLayout);
        jPanelNavigationLayout.setHorizontalGroup(
            jPanelNavigationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator4)
            .addComponent(jSeparator3)
            .addGroup(jPanelNavigationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelNavigationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelNavigationLayout.createSequentialGroup()
                        .addGroup(jPanelNavigationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelNavigationLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanelNavigationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioGreedy)
                            .addGroup(jPanelNavigationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelNavigationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButtonSendRandMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 125, Short.MAX_VALUE)
                                    .addComponent(jButtonAddPoly, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(jButtonAddWall, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(jButtonShowStat, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                .addComponent(jButtonGoHome, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButtonAddSensor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButtonAddRandomSensor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jRadioSmart, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
            .addComponent(jSeparator5)
        );
        jPanelNavigationLayout.setVerticalGroup(
            jPanelNavigationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelNavigationLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonAddSensor, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonAddRandomSensor, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(jRadioGreedy)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioSmart)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonAddPoly, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonAddWall, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonSendRandMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonShowStat, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonGoHome, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanelInformation.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTextInformation.setEditable(false);
        jTextInformation.setBackground(new java.awt.Color(204, 204, 255));
        jTextInformation.setColumns(20);
        jTextInformation.setRows(5);
        jTextInformation.setBorder(null);
        jScrollPane1.setViewportView(jTextInformation);

        javax.swing.GroupLayout jPanelInformationLayout = new javax.swing.GroupLayout(jPanelInformation);
        jPanelInformation.setLayout(jPanelInformationLayout);
        jPanelInformationLayout.setHorizontalGroup(
            jPanelInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 625, Short.MAX_VALUE)
        );
        jPanelInformationLayout.setVerticalGroup(
            jPanelInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
        );

        sensorContainer.setBackground(new java.awt.Color(204, 204, 255));
        sensorContainer.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel4.setText("Console");

        jMenu2.setText("File");

        jMenuFileNew.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuFileNew.setText("New Map");
        jMenuFileNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuFileNewActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuFileNew);
        jMenu2.add(jSeparator1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Open");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("Save");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuItem4.setText("Save As...");
        jMenu2.add(jMenuItem4);
        jMenu2.add(jSeparator2);

        jMenuFileExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        jMenuFileExit.setText("Exit");
        jMenuFileExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuFileExitActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuFileExit);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Edit");
        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jPanelInformation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sensorContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(7, 7, 7)
                .addComponent(jPanelNavigation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(sensorContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanelInformation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanelNavigation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAddSensorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddSensorActionPerformed
        if (isAddingSensor == false) {   
            jButtonAddSensor.setText("Stop add sensor");
            jButtonAddWall.setText("Add Wall");
            jButtonAddPoly.setText("Add Poly");
            setIsAddingSensor(true);
            setIsAddingWall(false);
            setIsAddingPoly(false);
        }
        else {
            jButtonAddSensor.setText("Add Sensor");
            setIsAddingSensor(false);
        }
    }//GEN-LAST:event_jButtonAddSensorActionPerformed

    private void jButtonAddRandomSensorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddRandomSensorActionPerformed
        int numOfSensor = 0;
        while (true) {
            try {
                String line = JOptionPane.showInputDialog(null, "Enter number of Sensor:");        
                if (line != null) {
                    numOfSensor = Integer.parseInt(line);
                    if (numOfSensor > 1000) {
                        JOptionPane.showMessageDialog(null, "Number of sensor must be smaller than 1000");
                        return;
                    }
                } else {}
            } catch (NumberFormatException t) {
                JOptionPane.showMessageDialog(null, "It is not a number");
                //continue;
            }
            break;
        }
        for (int i = 0; i < numOfSensor; i++) {
            if (jRadioSmart.isSelected())   
                sensorContainer.addSensor(SensorType.SMART_SENSOR, new Point2D(random() * sensorContainer.getWidth()/100, random() * sensorContainer.getHeight()/100));          
            else if (jRadioGreedy.isSelected())
                sensorContainer.addSensor(SensorType.DEFAULT_SENSOR, new Point2D(random() * sensorContainer.getWidth()/100, random() * sensorContainer.getHeight()/100));    
        }
    }//GEN-LAST:event_jButtonAddRandomSensorActionPerformed

    private void jButtonSendRandMsgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSendRandMsgActionPerformed
        if (isSendingRandomMessgae == false) {
            sensorContainer.setAutoCreateMessage(!sensorContainer.isAutoCreateMessage());
            jButtonSendRandMsg.setText("       Stop Send Random Message");
            setIsSendingRandomMessgae(true);
        }
        else {
            sensorContainer.setAutoCreateMessage(!sensorContainer.isAutoCreateMessage());
            jButtonSendRandMsg.setText("       Send Random Message");
            setIsSendingRandomMessgae(false);
        }
    }//GEN-LAST:event_jButtonSendRandMsgActionPerformed

    private void jButtonAddPolyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddPolyActionPerformed
        if (isAddingPoly == false) {
            setIsAddingWall(false);
            jButtonAddWall.setText("Add Wall");
            setIsAddingSensor(false);
            jButtonAddSensor.setText("Add Sensor");
            
            //setIsAddingPoly(true);
            //jButtonAddPoly.setText("Stop Add Poly");
        } 
        else {
            //setIsAddingPoly(false);
            //jButtonAddPoly.setText("Add Poly");
        }
        
        if (addPoly == -1) {
            addPoly = 0;
            
        } else {
            JOptionPane.showMessageDialog(null, "You are creating new poly!");
            
        }
    }//GEN-LAST:event_jButtonAddPolyActionPerformed

    private void jButtonShowStatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonShowStatActionPerformed
        new Statistics();
    }//GEN-LAST:event_jButtonShowStatActionPerformed

    private void jButtonAddWallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddWallActionPerformed
        if (isAddingWall == false) {
            jButtonAddWall.setText("Stop add Wall");
            jButtonAddSensor.setText("Add Sensor");
            setIsAddingWall(true);
            setIsAddingPoly(false);
            setIsAddingSensor(false);
        }
        else {
            jButtonAddWall.setText("Add Wall");
            setIsAddingWall(false);
        }
    }//GEN-LAST:event_jButtonAddWallActionPerformed

    private void jButtonGoHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGoHomeActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        parentMainFrame.setVisible(true);
    }//GEN-LAST:event_jButtonGoHomeActionPerformed

    private void jRadioGreedyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioGreedyActionPerformed
        isDefaultSensor = true;
    }//GEN-LAST:event_jRadioGreedyActionPerformed

    private void jRadioSmartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioSmartActionPerformed
        isDefaultSensor = false;
    }//GEN-LAST:event_jRadioSmartActionPerformed

    private void jMenuFileNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuFileNewActionPerformed
        sensorContainer.clear();
    }//GEN-LAST:event_jMenuFileNewActionPerformed

    private void jMenuFileExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuFileExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuFileExitActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        final JFileChooser fc = new JFileChooser();
        int returnVal = fc.showSaveDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            try {
                sensorContainer.writeToFile(file.getPath());
            } catch (IOException ex) {
                Logger.getLogger(MapFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            //log.append("Open command cancelled by user." + newline);
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        final JFileChooser fc = new JFileChooser();
        int returnVal = fc.showOpenDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            try {
                sensorContainer.clear();
                sensorContainer.loadFromFile(file.getPath());
            } catch (IOException ex) {
                Logger.getLogger(MapFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            //log.append("Open command cancelled by user." + newline);
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MapFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MapFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MapFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MapFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new MapFrame().setVisible(true);
            }
        });
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.ButtonGroup buttonGroup6;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JButton jButtonAddPoly;
    private javax.swing.JButton jButtonAddRandomSensor;
    private javax.swing.JButton jButtonAddSensor;
    private javax.swing.JButton jButtonAddWall;
    private javax.swing.JButton jButtonGoHome;
    private javax.swing.JButton jButtonSendRandMsg;
    private javax.swing.JButton jButtonShowStat;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelScale;
    private javax.swing.JLabel jLabelX;
    private javax.swing.JLabel jLabelY;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuFileExit;
    private javax.swing.JMenuItem jMenuFileNew;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanelInformation;
    private javax.swing.JPanel jPanelNavigation;
    private javax.swing.JPanel jPanelStatus;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem2;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem3;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem4;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem5;
    private javax.swing.JRadioButton jRadioGreedy;
    private javax.swing.JRadioButton jRadioSmart;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private static javax.swing.JTextArea jTextInformation;
    private javax.swing.JToolBar jToolBar1;
    private com.wsn.SensorPanel sensorContainer;
    // End of variables declaration//GEN-END:variables
}
